// <auto-generated />
using System;
using Ebote.Infrastructure.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Ebote.Infrastructure.Migrations
{
    [DbContext(typeof(PostgresDbContext))]
    partial class PostgresDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ebote")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ebote.Domain.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.HasIndex("ProfileId")
                        .IsUnique();

                    b.ToTable("Accounts", "ebote");
                });

            modelBuilder.Entity("Ebote.Domain.Entities.Lobby", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Lobbies", "ebote");
                });

            modelBuilder.Entity("Ebote.Domain.Entities.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ActiveLobbyId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ActiveLobbyId");

                    b.ToTable("Profiles", "ebote");
                });

            modelBuilder.Entity("Ebote.Domain.Entities.Account", b =>
                {
                    b.HasOne("Ebote.Domain.Entities.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("Ebote.Domain.Entities.Lobby", b =>
                {
                    b.HasOne("Ebote.Domain.Entities.Profile", "Creator")
                        .WithMany("Lobbies")
                        .HasForeignKey("CreatorId");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Ebote.Domain.Entities.Profile", b =>
                {
                    b.HasOne("Ebote.Domain.Entities.Lobby", "ActiveLobby")
                        .WithMany()
                        .HasForeignKey("ActiveLobbyId");

                    b.Navigation("ActiveLobby");
                });

            modelBuilder.Entity("Ebote.Domain.Entities.Profile", b =>
                {
                    b.Navigation("Lobbies");
                });
#pragma warning restore 612, 618
        }
    }
}
